[{"path":[]},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dendro","title":"Contributing to dendro","text":"outlines propose change dendro. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dendro","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dendro","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dendro","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"mikemahoney218/dendro\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dendro","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://mikemahoney218.github.io/dendro/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dendro","text":"Please note dendro project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://mikemahoney218.github.io/dendro/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 dendro authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mikemahoney218.github.io/dendro/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with dendro","title":"Getting help with dendro","text":"Thanks using dendro! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://mikemahoney218.github.io/dendro/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with dendro","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://mikemahoney218.github.io/dendro/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with dendro","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://mikemahoney218.github.io/dendro/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with dendro","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://mikemahoney218.github.io/dendro/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://mikemahoney218.github.io/dendro/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2023). dendro: Package (One Line, Title Case). https://github.com/mikemahoney218/dendro, https://mikemahoney218.github.io/dendro/.","code":"@Manual{,   title = {dendro: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2023},   note = {https://github.com/mikemahoney218/dendro, https://mikemahoney218.github.io/dendro/}, }"},{"path":"https://mikemahoney218.github.io/dendro/reference/add_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a node to a tree. — add_node","title":"Add a node to a tree. — add_node","text":"Add node tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/add_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a node to a tree. — add_node","text":"","code":"add_node(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/add_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a node to a tree. — add_node","text":"x tree() add node() . value attributes information assign node. name Optional: name assign node's index. parent parent node new node. one parentless node allowed given tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/add_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a node to a tree. — add_node","text":"tree() object.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/add_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a node to a tree. — add_node","text":"","code":"tree() |> add_node() #> <dendro::tree> #>  @ size        : int 1 #>  @ node_indices: int 1 #>  @ next_idx    : int 2 #>  @ root        : int 1 #>  @ nodes       :List of 1 #>  .. $ : <dendro::node> #>  ..  ..@ index   : int 1 #>  ..  ..@ value   :'data.frame':\t0 obs. of  0 variables #>  ..  ..@ parent  : int NA #>  ..  ..@ children: int(0)"},{"path":"https://mikemahoney218.github.io/dendro/reference/as_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data frame to tree format — as_tree","title":"Convert a data frame to tree format — as_tree","text":"Convert data frame tree format","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/as_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data frame to tree format — as_tree","text":"","code":"as_tree(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/as_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data frame to tree format — as_tree","text":"x data frame convert. id_columns columns use split data frame tree, character vector. ordered least specific (upper branches) (lowest branches). root_name Optionally, name root node. drop_id_columns Logical: columns used split data frame nodes included values node?","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/as_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a data frame to tree format — as_tree","text":"","code":"data(GNI2014, package = \"treemap\") as_tree(GNI2014, id_columns = c(\"continent\"), root_name = \"world\") #> <dendro::tree> #>  @ size        : int 9 #>  @ node_indices: Named int [1:9] 1 2 3 4 5 6 7 8 9 #>  .. - attr(*, \"names\")= chr [1:9] \"world\" \"Africa\" \"Antarctica\" \"Asia\" ... #>  @ next_idx    : int 10 #>  @ root        : Named int 1 #>  .. - attr(*, \"names\")= chr \"world\" #>  @ nodes       :List of 9 #>  .. $ world                  : <dendro::node> #>  ..  ..@ index   : int 1 #>  ..  ..@ value   :'data.frame':\t0 obs. of  0 variables #>  ..  ..@ parent  : int NA #>  ..  ..@ children: Named int [1:8] 2 3 4 5 6 7 8 9 #>  .. .. .. - attr(*, \"names\")= chr [1:8] \"Africa\" \"Antarctica\" \"Asia\" \"Europe\" ... #>  .. $ Africa                 : <dendro::node> #>  ..  ..@ index   : int 2 #>  ..  ..@ value   :'data.frame':\t48 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:48] \"GNQ\" \"GAB\" \"LBY\" \"BWA\" ... #>  .. .. .. $ country   : chr [1:48] \"Equatorial Guinea\" \"Gabon\" \"Libya\" \"Botswana\" ... #>  .. .. .. $ population: num [1:48] 650702 1514993 6310434 1990876 49052489 ... #>  .. .. .. $ GNI       : int [1:48] 10210 9720 7820 7240 6800 5630 5490 4230 3550 3450 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Antarctica             : <dendro::node> #>  ..  ..@ index   : int 3 #>  ..  ..@ value   :'data.frame':\t0 obs. of  4 variables: #>  .. .. .. $ iso3      : chr(0)  #>  .. .. .. $ country   : chr(0)  #>  .. .. .. $ population: num(0)  #>  .. .. .. $ GNI       : int(0)  #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Asia                   : <dendro::node> #>  ..  ..@ index   : int 4 #>  ..  ..@ value   :'data.frame':\t47 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:47] \"QAT\" \"MAC\" \"SGP\" \"KWT\" ... #>  .. .. .. $ country   : chr [1:47] \"Qatar\" \"Macao SAR, China\" \"Singapore\" \"Kuwait\" ... #>  .. .. .. $ population: num [1:47] 833285 559846 4657542 2691158 4798491 ... #>  .. .. .. $ GNI       : int [1:47] 92200 76270 55150 49300 44600 42000 40320 37320 35320 27090 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Europe                 : <dendro::node> #>  ..  ..@ index   : int 5 #>  ..  ..@ value   :'data.frame':\t41 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:41] \"NOR\" \"CHE\" \"LUX\" \"SWE\" ... #>  .. .. .. $ country   : chr [1:41] \"Norway\" \"Switzerland\" \"Luxembourg\" \"Sweden\" ... #>  .. .. .. $ population: num [1:41] 4676305 7604467 491775 9059651 5500510 ... #>  .. .. .. $ GNI       : int [1:41] 103630 88120 75990 61610 61310 51890 49670 48420 47640 46350 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ North America          : <dendro::node> #>  ..  ..@ index   : int 6 #>  ..  ..@ value   :'data.frame':\t24 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:24] \"BMU\" \"USA\" \"CAN\" \"BHS\" ... #>  .. .. .. $ country   : chr [1:24] \"Bermuda\" \"United States\" \"Canada\" \"Bahamas, The\" ... #>  .. .. .. $ population: num [1:24] 6.78e+04 3.14e+08 3.35e+07 3.09e+05 1.31e+06 ... #>  .. .. .. $ GNI       : int [1:24] 106140 55200 51630 20980 20070 19310 15310 14920 13300 11130 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Oceania                : <dendro::node> #>  ..  ..@ index   : int 7 #>  ..  ..@ value   :'data.frame':\t13 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:13] \"AUS\" \"NZL\" \"PLW\" \"TUV\" ... #>  .. .. .. $ country   : chr [1:13] \"Australia\" \"New Zealand\" \"Palau\" \"Tuvalu\" ... #>  .. .. .. $ population: num [1:13] 21262641 4213418 20796 10640 944720 ... #>  .. .. .. $ GNI       : int [1:13] 64540 41070 11110 5720 4870 4390 4260 4060 3200 3160 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Seven seas (open ocean): <dendro::node> #>  ..  ..@ index   : int 8 #>  ..  ..@ value   :'data.frame':\t3 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:3] \"SYC\" \"MUS\" \"MDV\" #>  .. .. .. $ country   : chr [1:3] \"Seychelles\" \"Mauritius\" \"Maldives\" #>  .. .. .. $ population: num [1:3] 87476 1284264 396334 #>  .. .. .. $ GNI       : int [1:3] 14100 9630 6410 #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ South America          : <dendro::node> #>  ..  ..@ index   : int 9 #>  ..  ..@ value   :'data.frame':\t12 obs. of  4 variables: #>  .. .. .. $ iso3      : chr [1:12] \"URY\" \"CHL\" \"ARG\" \"VEN\" ... #>  .. .. .. $ country   : chr [1:12] \"Uruguay\" \"Chile\" \"Argentina\" \"Venezuela, RB\" ... #>  .. .. .. $ population: num [1:12] 3.49e+06 1.66e+07 4.09e+07 2.68e+07 1.99e+08 ... #>  .. .. .. $ GNI       : int [1:12] 16350 14910 13480 12500 11530 9950 7970 6360 6090 4400 ... #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  as_tree(GNI2014, id_columns = c(\"continent\", \"country\"), root_name = \"world\") #> <dendro::tree> #>  @ size        : int 197 #>  @ node_indices: Named int [1:197] 1 2 3 4 5 6 7 8 9 10 ... #>  .. - attr(*, \"names\")= chr [1:197] \"world\" \"Africa\" \"Algeria\" \"Benin\" ... #>  @ next_idx    : int 198 #>  @ root        : Named int 1 #>  .. - attr(*, \"names\")= chr \"world\" #>  @ nodes       :List of 197 #>  .. $ world                         : <dendro::node> #>  ..  ..@ index   : int 1 #>  ..  ..@ value   :'data.frame':\t0 obs. of  0 variables #>  ..  ..@ parent  : int NA #>  ..  ..@ children: Named int [1:8] 2 51 52 100 142 167 181 185 #>  .. .. .. - attr(*, \"names\")= chr [1:8] \"Africa\" \"Antarctica\" \"Asia\" \"Europe\" ... #>  .. $ Africa                        : <dendro::node> #>  ..  ..@ index   : int 2 #>  ..  ..@ value   :'data.frame':\t0 obs. of  3 variables: #>  .. .. .. $ iso3      : chr(0)  #>  .. .. .. $ population: num(0)  #>  .. .. .. $ GNI       : int(0)  #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: Named int [1:48] 3 4 5 6 7 8 9 10 11 12 ... #>  .. .. .. - attr(*, \"names\")= chr [1:48] \"Algeria\" \"Benin\" \"Botswana\" \"Burkina Faso\" ... #>  .. $ Algeria                       : <dendro::node> #>  ..  ..@ index   : int 3 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"DZA\" #>  .. .. .. $ population: num 34178188 #>  .. .. .. $ GNI       : int 5490 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Benin                         : <dendro::node> #>  ..  ..@ index   : int 4 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BEN\" #>  .. .. .. $ population: num 8791832 #>  .. .. .. $ GNI       : int 890 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Botswana                      : <dendro::node> #>  ..  ..@ index   : int 5 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BWA\" #>  .. .. .. $ population: num 1990876 #>  .. .. .. $ GNI       : int 7240 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Burkina Faso                  : <dendro::node> #>  ..  ..@ index   : int 6 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BFA\" #>  .. .. .. $ population: num 15746232 #>  .. .. .. $ GNI       : int 700 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Burundi                       : <dendro::node> #>  ..  ..@ index   : int 7 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BDI\" #>  .. .. .. $ population: num 8988091 #>  .. .. .. $ GNI       : int 270 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Cabo Verde                    : <dendro::node> #>  ..  ..@ index   : int 8 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CPV\" #>  .. .. .. $ population: num 429474 #>  .. .. .. $ GNI       : int 3450 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Cameroon                      : <dendro::node> #>  ..  ..@ index   : int 9 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CMR\" #>  .. .. .. $ population: num 18879301 #>  .. .. .. $ GNI       : int 1350 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Central African Republic      : <dendro::node> #>  ..  ..@ index   : int 10 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CAF\" #>  .. .. .. $ population: num 4511488 #>  .. .. .. $ GNI       : int 320 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Chad                          : <dendro::node> #>  ..  ..@ index   : int 11 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TCD\" #>  .. .. .. $ population: num 10329208 #>  .. .. .. $ GNI       : int 980 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Comoros                       : <dendro::node> #>  ..  ..@ index   : int 12 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"COM\" #>  .. .. .. $ population: num 752438 #>  .. .. .. $ GNI       : int 790 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Congo, Dem. Rep.              : <dendro::node> #>  ..  ..@ index   : int 13 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"COD\" #>  .. .. .. $ population: num 68692542 #>  .. .. .. $ GNI       : int 380 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Congo, Rep.                   : <dendro::node> #>  ..  ..@ index   : int 14 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"COG\" #>  .. .. .. $ population: num 4012809 #>  .. .. .. $ GNI       : int 2720 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Cote d'Ivoire                 : <dendro::node> #>  ..  ..@ index   : int 15 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CIV\" #>  .. .. .. $ population: num 20617068 #>  .. .. .. $ GNI       : int 1450 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Egypt, Arab Rep.              : <dendro::node> #>  ..  ..@ index   : int 16 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"EGY\" #>  .. .. .. $ population: num 83082869 #>  .. .. .. $ GNI       : int 3050 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Equatorial Guinea             : <dendro::node> #>  ..  ..@ index   : int 17 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GNQ\" #>  .. .. .. $ population: num 650702 #>  .. .. .. $ GNI       : int 10210 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Ethiopia                      : <dendro::node> #>  ..  ..@ index   : int 18 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ETH\" #>  .. .. .. $ population: num 85237338 #>  .. .. .. $ GNI       : int 550 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Gabon                         : <dendro::node> #>  ..  ..@ index   : int 19 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GAB\" #>  .. .. .. $ population: num 1514993 #>  .. .. .. $ GNI       : int 9720 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Gambia, The                   : <dendro::node> #>  ..  ..@ index   : int 20 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GMB\" #>  .. .. .. $ population: num 1782893 #>  .. .. .. $ GNI       : int 500 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Ghana                         : <dendro::node> #>  ..  ..@ index   : int 21 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GHA\" #>  .. .. .. $ population: num 23832495 #>  .. .. .. $ GNI       : int 1590 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Guinea                        : <dendro::node> #>  ..  ..@ index   : int 22 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GIN\" #>  .. .. .. $ population: num 10057975 #>  .. .. .. $ GNI       : int 470 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Guinea-Bissau                 : <dendro::node> #>  ..  ..@ index   : int 23 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GNB\" #>  .. .. .. $ population: num 1533964 #>  .. .. .. $ GNI       : int 550 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Kenya                         : <dendro::node> #>  ..  ..@ index   : int 24 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KEN\" #>  .. .. .. $ population: num 3.9e+07 #>  .. .. .. $ GNI       : int 1290 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Lesotho                       : <dendro::node> #>  ..  ..@ index   : int 25 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LSO\" #>  .. .. .. $ population: num 2130819 #>  .. .. .. $ GNI       : int 1330 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Liberia                       : <dendro::node> #>  ..  ..@ index   : int 26 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LBR\" #>  .. .. .. $ population: num 3441790 #>  .. .. .. $ GNI       : int 370 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Libya                         : <dendro::node> #>  ..  ..@ index   : int 27 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LBY\" #>  .. .. .. $ population: num 6310434 #>  .. .. .. $ GNI       : int 7820 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Madagascar                    : <dendro::node> #>  ..  ..@ index   : int 28 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MDG\" #>  .. .. .. $ population: num 20653556 #>  .. .. .. $ GNI       : int 440 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Malawi                        : <dendro::node> #>  ..  ..@ index   : int 29 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MWI\" #>  .. .. .. $ population: num 14268711 #>  .. .. .. $ GNI       : int 250 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Mali                          : <dendro::node> #>  ..  ..@ index   : int 30 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MLI\" #>  .. .. .. $ population: num 12666987 #>  .. .. .. $ GNI       : int 650 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Mauritania                    : <dendro::node> #>  ..  ..@ index   : int 31 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MRT\" #>  .. .. .. $ population: num 3129486 #>  .. .. .. $ GNI       : int 1270 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Morocco                       : <dendro::node> #>  ..  ..@ index   : int 32 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MAR\" #>  .. .. .. $ population: num 34859364 #>  .. .. .. $ GNI       : int 3070 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Mozambique                    : <dendro::node> #>  ..  ..@ index   : int 33 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MOZ\" #>  .. .. .. $ population: num 21669278 #>  .. .. .. $ GNI       : int 600 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Namibia                       : <dendro::node> #>  ..  ..@ index   : int 34 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"NAM\" #>  .. .. .. $ population: num 2108665 #>  .. .. .. $ GNI       : int 5630 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Niger                         : <dendro::node> #>  ..  ..@ index   : int 35 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"NER\" #>  .. .. .. $ population: num 15306252 #>  .. .. .. $ GNI       : int 410 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Nigeria                       : <dendro::node> #>  ..  ..@ index   : int 36 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"NGA\" #>  .. .. .. $ population: num 1.49e+08 #>  .. .. .. $ GNI       : int 2970 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Rwanda                        : <dendro::node> #>  ..  ..@ index   : int 37 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"RWA\" #>  .. .. .. $ population: num 10473282 #>  .. .. .. $ GNI       : int 700 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Sao Tome and Principe         : <dendro::node> #>  ..  ..@ index   : int 38 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"STP\" #>  .. .. .. $ population: num 212679 #>  .. .. .. $ GNI       : int 1670 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Senegal                       : <dendro::node> #>  ..  ..@ index   : int 39 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SEN\" #>  .. .. .. $ population: num 13711597 #>  .. .. .. $ GNI       : int 1050 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Sierra Leone                  : <dendro::node> #>  ..  ..@ index   : int 40 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SLE\" #>  .. .. .. $ population: num 6440053 #>  .. .. .. $ GNI       : int 700 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ South Africa                  : <dendro::node> #>  ..  ..@ index   : int 41 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ZAF\" #>  .. .. .. $ population: num 49052489 #>  .. .. .. $ GNI       : int 6800 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ South Sudan                   : <dendro::node> #>  ..  ..@ index   : int 42 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SSD\" #>  .. .. .. $ population: num 10625176 #>  .. .. .. $ GNI       : int 970 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Sudan                         : <dendro::node> #>  ..  ..@ index   : int 43 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SDN\" #>  .. .. .. $ population: num 25946220 #>  .. .. .. $ GNI       : int 1710 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Swaziland                     : <dendro::node> #>  ..  ..@ index   : int 44 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SWZ\" #>  .. .. .. $ population: num 1123913 #>  .. .. .. $ GNI       : int 3550 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Tanzania                      : <dendro::node> #>  ..  ..@ index   : int 45 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TZA\" #>  .. .. .. $ population: num 4.1e+07 #>  .. .. .. $ GNI       : int 920 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Togo                          : <dendro::node> #>  ..  ..@ index   : int 46 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TGO\" #>  .. .. .. $ population: num 6019877 #>  .. .. .. $ GNI       : int 570 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Tunisia                       : <dendro::node> #>  ..  ..@ index   : int 47 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TUN\" #>  .. .. .. $ population: num 10486339 #>  .. .. .. $ GNI       : int 4230 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Uganda                        : <dendro::node> #>  ..  ..@ index   : int 48 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"UGA\" #>  .. .. .. $ population: num 32369558 #>  .. .. .. $ GNI       : int 670 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Zambia                        : <dendro::node> #>  ..  ..@ index   : int 49 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ZMB\" #>  .. .. .. $ population: num 11862740 #>  .. .. .. $ GNI       : int 1680 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Zimbabwe                      : <dendro::node> #>  ..  ..@ index   : int 50 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ZWE\" #>  .. .. .. $ population: num 12619600 #>  .. .. .. $ GNI       : int 840 #>  ..  ..@ parent  : int 2 #>  ..  ..@ children: int(0)  #>  .. $ Antarctica                    : <dendro::node> #>  ..  ..@ index   : int 51 #>  ..  ..@ value   :'data.frame':\t0 obs. of  3 variables: #>  .. .. .. $ iso3      : chr(0)  #>  .. .. .. $ population: num(0)  #>  .. .. .. $ GNI       : int(0)  #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: int(0)  #>  .. $ Asia                          : <dendro::node> #>  ..  ..@ index   : int 52 #>  ..  ..@ value   :'data.frame':\t0 obs. of  3 variables: #>  .. .. .. $ iso3      : chr(0)  #>  .. .. .. $ population: num(0)  #>  .. .. .. $ GNI       : int(0)  #>  ..  ..@ parent  : int 1 #>  ..  ..@ children: Named int [1:47] 53 54 55 56 57 58 59 60 61 62 ... #>  .. .. .. - attr(*, \"names\")= chr [1:47] \"Afghanistan\" \"Armenia\" \"Azerbaijan\" \"Bahrain\" ... #>  .. $ Afghanistan                   : <dendro::node> #>  ..  ..@ index   : int 53 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"AFG\" #>  .. .. .. $ population: num 28400000 #>  .. .. .. $ GNI       : int 680 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Armenia                       : <dendro::node> #>  ..  ..@ index   : int 54 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ARM\" #>  .. .. .. $ population: num 2967004 #>  .. .. .. $ GNI       : int 4020 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Azerbaijan                    : <dendro::node> #>  ..  ..@ index   : int 55 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"AZE\" #>  .. .. .. $ population: num 8238672 #>  .. .. .. $ GNI       : int 7590 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Bahrain                       : <dendro::node> #>  ..  ..@ index   : int 56 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BHR\" #>  .. .. .. $ population: num 727785 #>  .. .. .. $ GNI       : int 21060 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Bangladesh                    : <dendro::node> #>  ..  ..@ index   : int 57 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BGD\" #>  .. .. .. $ population: num 1.56e+08 #>  .. .. .. $ GNI       : int 1080 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Bhutan                        : <dendro::node> #>  ..  ..@ index   : int 58 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BTN\" #>  .. .. .. $ population: num 691141 #>  .. .. .. $ GNI       : int 2370 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Brunei Darussalam             : <dendro::node> #>  ..  ..@ index   : int 59 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"BRN\" #>  .. .. .. $ population: num 388190 #>  .. .. .. $ GNI       : int 37320 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Cambodia                      : <dendro::node> #>  ..  ..@ index   : int 60 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KHM\" #>  .. .. .. $ population: num 14494293 #>  .. .. .. $ GNI       : int 1020 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ China                         : <dendro::node> #>  ..  ..@ index   : int 61 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CHN\" #>  .. .. .. $ population: num 1.34e+09 #>  .. .. .. $ GNI       : int 7400 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Cyprus                        : <dendro::node> #>  ..  ..@ index   : int 62 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"CYP\" #>  .. .. .. $ population: num 531640 #>  .. .. .. $ GNI       : int 26370 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Georgia                       : <dendro::node> #>  ..  ..@ index   : int 63 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"GEO\" #>  .. .. .. $ population: num 4615807 #>  .. .. .. $ GNI       : int 3720 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Hong Kong SAR, China          : <dendro::node> #>  ..  ..@ index   : int 64 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"HKG\" #>  .. .. .. $ population: num 7061200 #>  .. .. .. $ GNI       : int 40320 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ India                         : <dendro::node> #>  ..  ..@ index   : int 65 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"IND\" #>  .. .. .. $ population: num 1.17e+09 #>  .. .. .. $ GNI       : int 1570 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Indonesia                     : <dendro::node> #>  ..  ..@ index   : int 66 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"IDN\" #>  .. .. .. $ population: num 2.4e+08 #>  .. .. .. $ GNI       : int 3630 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Iran, Islamic Rep.            : <dendro::node> #>  ..  ..@ index   : int 67 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"IRN\" #>  .. .. .. $ population: num 66429284 #>  .. .. .. $ GNI       : int 7120 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Iraq                          : <dendro::node> #>  ..  ..@ index   : int 68 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"IRQ\" #>  .. .. .. $ population: num 31129225 #>  .. .. .. $ GNI       : int 6500 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Israel                        : <dendro::node> #>  ..  ..@ index   : int 69 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ISR\" #>  .. .. .. $ population: num 7233701 #>  .. .. .. $ GNI       : int 35320 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Japan                         : <dendro::node> #>  ..  ..@ index   : int 70 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"JPN\" #>  .. .. .. $ population: num 1.27e+08 #>  .. .. .. $ GNI       : int 42000 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Jordan                        : <dendro::node> #>  ..  ..@ index   : int 71 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"JOR\" #>  .. .. .. $ population: num 6342948 #>  .. .. .. $ GNI       : int 5160 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Kazakhstan                    : <dendro::node> #>  ..  ..@ index   : int 72 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KAZ\" #>  .. .. .. $ population: num 15399437 #>  .. .. .. $ GNI       : int 11850 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Korea, Rep.                   : <dendro::node> #>  ..  ..@ index   : int 73 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KOR\" #>  .. .. .. $ population: num 48508972 #>  .. .. .. $ GNI       : int 27090 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Kuwait                        : <dendro::node> #>  ..  ..@ index   : int 74 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KWT\" #>  .. .. .. $ population: num 2691158 #>  .. .. .. $ GNI       : int 49300 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Kyrgyz Republic               : <dendro::node> #>  ..  ..@ index   : int 75 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"KGZ\" #>  .. .. .. $ population: num 5431747 #>  .. .. .. $ GNI       : int 1250 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Lao PDR                       : <dendro::node> #>  ..  ..@ index   : int 76 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LAO\" #>  .. .. .. $ population: num 6834942 #>  .. .. .. $ GNI       : int 1660 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Lebanon                       : <dendro::node> #>  ..  ..@ index   : int 77 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LBN\" #>  .. .. .. $ population: num 4017095 #>  .. .. .. $ GNI       : int 10030 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Macao SAR, China              : <dendro::node> #>  ..  ..@ index   : int 78 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MAC\" #>  .. .. .. $ population: num 559846 #>  .. .. .. $ GNI       : int 76270 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Malaysia                      : <dendro::node> #>  ..  ..@ index   : int 79 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MYS\" #>  .. .. .. $ population: num 25715819 #>  .. .. .. $ GNI       : int 11120 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Mongolia                      : <dendro::node> #>  ..  ..@ index   : int 80 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MNG\" #>  .. .. .. $ population: num 3041142 #>  .. .. .. $ GNI       : int 4280 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Myanmar                       : <dendro::node> #>  ..  ..@ index   : int 81 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"MMR\" #>  .. .. .. $ population: num 48137741 #>  .. .. .. $ GNI       : int 1270 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Nepal                         : <dendro::node> #>  ..  ..@ index   : int 82 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"NPL\" #>  .. .. .. $ population: num 28563377 #>  .. .. .. $ GNI       : int 730 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Oman                          : <dendro::node> #>  ..  ..@ index   : int 83 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"OMN\" #>  .. .. .. $ population: num 3418085 #>  .. .. .. $ GNI       : int 16870 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Pakistan                      : <dendro::node> #>  ..  ..@ index   : int 84 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"PAK\" #>  .. .. .. $ population: num 1.76e+08 #>  .. .. .. $ GNI       : int 1400 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Philippines                   : <dendro::node> #>  ..  ..@ index   : int 85 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"PHL\" #>  .. .. .. $ population: num 9.8e+07 #>  .. .. .. $ GNI       : int 3500 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Qatar                         : <dendro::node> #>  ..  ..@ index   : int 86 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"QAT\" #>  .. .. .. $ population: num 833285 #>  .. .. .. $ GNI       : int 92200 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Saudi Arabia                  : <dendro::node> #>  ..  ..@ index   : int 87 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SAU\" #>  .. .. .. $ population: num 28686633 #>  .. .. .. $ GNI       : int 25140 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Singapore                     : <dendro::node> #>  ..  ..@ index   : int 88 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"SGP\" #>  .. .. .. $ population: num 4657542 #>  .. .. .. $ GNI       : int 55150 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Sri Lanka                     : <dendro::node> #>  ..  ..@ index   : int 89 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"LKA\" #>  .. .. .. $ population: num 21324791 #>  .. .. .. $ GNI       : int 3460 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Tajikistan                    : <dendro::node> #>  ..  ..@ index   : int 90 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TJK\" #>  .. .. .. $ population: num 7349145 #>  .. .. .. $ GNI       : int 1080 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Thailand                      : <dendro::node> #>  ..  ..@ index   : int 91 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"THA\" #>  .. .. .. $ population: num 65905410 #>  .. .. .. $ GNI       : int 5780 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Timor-Leste                   : <dendro::node> #>  ..  ..@ index   : int 92 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TMP\" #>  .. .. .. $ population: num 1201542 #>  .. .. .. $ GNI       : int 2680 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Turkey                        : <dendro::node> #>  ..  ..@ index   : int 93 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TUR\" #>  .. .. .. $ population: num 76805524 #>  .. .. .. $ GNI       : int 10830 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Turkmenistan                  : <dendro::node> #>  ..  ..@ index   : int 94 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"TKM\" #>  .. .. .. $ population: num 4884887 #>  .. .. .. $ GNI       : int 8020 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ United Arab Emirates          : <dendro::node> #>  ..  ..@ index   : int 95 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"ARE\" #>  .. .. .. $ population: num 4798491 #>  .. .. .. $ GNI       : int 44600 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Uzbekistan                    : <dendro::node> #>  ..  ..@ index   : int 96 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"UZB\" #>  .. .. .. $ population: num 27606007 #>  .. .. .. $ GNI       : int 2090 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Vietnam                       : <dendro::node> #>  ..  ..@ index   : int 97 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"VNM\" #>  .. .. .. $ population: num 8.7e+07 #>  .. .. .. $ GNI       : int 1890 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ West Bank and Gaza            : <dendro::node> #>  ..  ..@ index   : int 98 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"WBG\" #>  .. .. .. $ population: num 4550368 #>  .. .. .. $ GNI       : int 3060 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  .. $ Yemen, Rep.                   : <dendro::node> #>  ..  ..@ index   : int 99 #>  ..  ..@ value   :'data.frame':\t1 obs. of  3 variables: #>  .. .. .. $ iso3      : chr \"YEM\" #>  .. .. .. $ population: num 23822783 #>  .. .. .. $ GNI       : int 1300 #>  ..  ..@ parent  : int 52 #>  ..  ..@ children: int(0)  #>  ..  [list output truncated]"},{"path":"https://mikemahoney218.github.io/dendro/reference/dendro-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dendro: What the Package Does (One Line, Title Case) — dendro-package","title":"dendro: What the Package Does (One Line, Title Case) — dendro-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://mikemahoney218.github.io/dendro/reference/dendro-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dendro: What the Package Does (One Line, Title Case) — dendro-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/distance_to_target.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate distance between two nodes in a tree. — distance_to_target","title":"Calculate distance between two nodes in a tree. — distance_to_target","text":"Calculate distance two nodes tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/distance_to_target.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate distance between two nodes in a tree. — distance_to_target","text":"","code":"distance_to_target(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/distance_to_target.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate distance between two nodes in a tree. — distance_to_target","text":"x tree calculate distances within. index calculate distance \"\". index calculate distance \"\".","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/distance_to_target.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate distance between two nodes in a tree. — distance_to_target","text":"Distance nodes numeric scalar. nodes nested, returns NA. tree, distance negative.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/distance_to_target.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate distance between two nodes in a tree. — distance_to_target","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   add_node(parent = 2L) |>   distance_to_target(1, 3) #> [1] 2"},{"path":"https://mikemahoney218.github.io/dendro/reference/drop_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a node (and all its descendants) from a tree — drop_node","title":"Drop a node (and all its descendants) from a tree — drop_node","text":"Drop node (descendants) tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/drop_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a node (and all its descendants) from a tree — drop_node","text":"","code":"drop_node(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/drop_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a node (and all its descendants) from a tree — drop_node","text":"x tree drop nodes . node_index node drop.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/drop_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a node (and all its descendants) from a tree — drop_node","text":"x, without specified node descendants.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/drop_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop a node (and all its descendants) from a tree — drop_node","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   drop_node(2) #> <dendro::tree> #>  @ size        : int 1 #>  @ node_indices: int 1 #>  @ next_idx    : int 2 #>  @ root        : int 1 #>  @ nodes       :List of 1 #>  .. $ : <dendro::node> #>  ..  ..@ index   : int 1 #>  ..  ..@ value   :'data.frame':\t0 obs. of  0 variables #>  ..  ..@ parent  : int NA #>  ..  ..@ children: int(0)   tree() |>   add_node() |>   add_node(parent = 1L) |>   drop_node(1) #> <dendro::tree> #>  @ size        : int 0 #>  @ node_indices: NULL #>  @ next_idx    : int 1 #>  @ root        : int NA #>  @ nodes       : list()"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_all_descendants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all descendants from a single node in a tree — get_all_descendants","title":"Get all descendants from a single node in a tree — get_all_descendants","text":"Get descendants single node tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_all_descendants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all descendants from a single node in a tree — get_all_descendants","text":"","code":"get_all_descendants(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_all_descendants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all descendants from a single node in a tree — get_all_descendants","text":"x tree extract node . node_index node index extract children .","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_all_descendants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all descendants from a single node in a tree — get_all_descendants","text":"children node node_index, integer vector.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_all_descendants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all descendants from a single node in a tree — get_all_descendants","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   add_node(parent = 2L) |>   get_all_descendants(1L) #> [1] 1 2 3"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the children slot from a single node in a tree — get_children","title":"Get the children slot from a single node in a tree — get_children","text":"Get children slot single node tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the children slot from a single node in a tree — get_children","text":"","code":"get_children(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the children slot from a single node in a tree — get_children","text":"x tree extract node . node_index node index extract children .","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the children slot from a single node in a tree — get_children","text":"children node node_index, integer vector.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the children slot from a single node in a tree — get_children","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   add_node(parent = 2L) |>   get_children(1L) #> [1] 2"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_node_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes values from a tree — get_node_values","title":"Extract nodes values from a tree — get_node_values","text":"Extract nodes values tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_node_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes values from a tree — get_node_values","text":"","code":"get_node_values(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_node_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes values from a tree — get_node_values","text":"x tree extract node values . node_indices index nodes extract tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_node_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes values from a tree — get_node_values","text":"list node values.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_node_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes values from a tree — get_node_values","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L, value = list(\"value one!\")) |>   add_node(parent = 2L, value = list(\"value two!\")) |>   get_node_values(c(2, 3)) #> [[1]] #> [[1]][[1]] #> [1] \"value one!\" #>  #>  #> [[2]] #> [[2]][[1]] #> [1] \"value two!\" #>  #>"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes from a tree — get_nodes","title":"Extract nodes from a tree — get_nodes","text":"Extract nodes tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes from a tree — get_nodes","text":"","code":"get_nodes(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/get_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes from a tree — get_nodes","text":"x tree extract nodes . node_indices index nodes extract tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes from a tree — get_nodes","text":"list nodes.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/get_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes from a tree — get_nodes","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   add_node(parent = 2L) |>   get_nodes(c(1, 2)) #> [[1]] #> <dendro::node> #>  @ index   : int 1 #>  @ value   :'data.frame':\t0 obs. of  0 variables #>  @ parent  : int NA #>  @ children: int 2 #>  #> [[2]] #> <dendro::node> #>  @ index   : int 2 #>  @ value   :'data.frame':\t0 obs. of  0 variables #>  @ parent  : int 1 #>  @ children: int 3 #>"},{"path":"https://mikemahoney218.github.io/dendro/reference/node.html","id":null,"dir":"Reference","previous_headings":"","what":"Node objects for collecting within trees — node","title":"Node objects for collecting within trees — node","text":"objects particularly useful , usually called via add_node() automatically assign unique index.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Node objects for collecting within trees — node","text":"","code":"node(   index = class_missing,   value = class_missing,   parent = class_missing,   children = class_missing )"},{"path":"https://mikemahoney218.github.io/dendro/reference/node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Node objects for collecting within trees — node","text":"index index node list nodes stored tree object. Calculated automatically using add_node(). value data attributes associated node. parent Integer: index node's parent. one root node allowed per tree. children Integer: index children node. Leaf nodes value NA_integer_.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Node objects for collecting within trees — node","text":"object class \"dendro::node\", \"S7_object\"","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Node objects for collecting within trees — node","text":"","code":"node(0L) #> <dendro::node> #>  @ index   : int 0 #>  @ value   : list() #>  @ parent  : int(0)  #>  @ children: int(0)   node(0L, list(a = 2)) #> <dendro::node> #>  @ index   : int 0 #>  @ value   :List of 1 #>  .. $ a: num 2 #>  @ parent  : int(0)  #>  @ children: int(0)"},{"path":"https://mikemahoney218.github.io/dendro/reference/node_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate depth of a node in the tree — node_depth","title":"Calculate depth of a node in the tree — node_depth","text":"Calculate depth node tree","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate depth of a node in the tree — node_depth","text":"","code":"node_depth(x, ...)"},{"path":"https://mikemahoney218.github.io/dendro/reference/node_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate depth of a node in the tree — node_depth","text":"x tree calculate node depth . node_index index node calculate depth ","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node_depth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate depth of a node in the tree — node_depth","text":"depth node numeric scalar.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/node_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate depth of a node in the tree — node_depth","text":"","code":"tree() |>   add_node() |>   add_node(parent = 1L) |>   add_node(parent = 2L) |>   node_depth(3) #> [1] 3"},{"path":"https://mikemahoney218.github.io/dendro/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S7 @","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Tree objects — tree","title":"Tree objects — tree","text":"primary class implemented package.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tree objects — tree","text":"","code":"tree(nodes = class_missing)"},{"path":"https://mikemahoney218.github.io/dendro/reference/tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tree objects — tree","text":"nodes list nodes, created via node(), form tree.","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tree objects — tree","text":"object class \"dendro::tree\", \"S7_object\"","code":""},{"path":"https://mikemahoney218.github.io/dendro/reference/tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tree objects — tree","text":"","code":"tree() #> <dendro::tree> #>  @ size        : int 0 #>  @ node_indices: NULL #>  @ next_idx    : int 1 #>  @ root        : int NA #>  @ nodes       : list() tree(list(node(1L))) #> <dendro::tree> #>  @ size        : int 1 #>  @ node_indices: int 1 #>  @ next_idx    : int 2 #>  @ root        : int 1 #>  @ nodes       :List of 1 #>  .. $ : <dendro::node> #>  ..  ..@ index   : int 1 #>  ..  ..@ value   : list() #>  ..  ..@ parent  : int(0)  #>  ..  ..@ children: int(0)"}]
